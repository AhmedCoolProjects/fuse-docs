{
  "GetHistory": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Get history",
    "description": "Get all history",
    "method": "GET",
    "path": "/history",
    "pathParams": [],
    "queryParams": [
      { "name": "limit", "required": true, "type": "number" },
      { "name": "cursor", "required": false, "type": "string" },
      { "name": "excludePayload", "required": false, "type": "boolean" }
    ],
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "result",
              "type": "object",
              "fields": [
                {
                  "name": "id",
                  "type": "string",
                  "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                  "format": "uuid",
                  "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
                },
                { "name": "date", "type": "string" },
                {
                  "name": "payload",
                  "type": "object",
                  "fields": [
                    {
                      "name": "block",
                      "type": "object",
                      "required": true,
                      "fields": [
                        {
                          "name": "number",
                          "type": "string",
                          "required": true
                        },
                        {
                          "name": "hash",
                          "type": "string",
                          "required": true
                        },
                        {
                          "name": "timestamp",
                          "type": "string",
                          "required": true
                        }
                      ]
                    },
                    { "name": "chainId", "type": "string", "required": true },
                    {
                      "name": "logs",
                      "required": true,
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "triggers",
                            "field": {
                              "type": "object",
                              "fields": [
                                {
                                  "name": "value",
                                  "type": "string",
                                  "required": true
                                },
                                {
                                  "name": "name",
                                  "type": "string",
                                  "required": true
                                }
                              ]
                            },
                            "type": "array"
                          },
                          {
                            "name": "logIndex",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "transactionHash",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "address",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "data",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "topic0",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "topic1",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "topic2",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "topic3",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          }
                        ]
                      },
                      "type": "array"
                    },
                    {
                      "name": "txs",
                      "required": true,
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "triggers",
                            "field": {
                              "type": "object",
                              "fields": [
                                {
                                  "name": "value",
                                  "type": "string",
                                  "required": true
                                },
                                {
                                  "name": "name",
                                  "type": "string",
                                  "required": true
                                }
                              ]
                            },
                            "type": "array"
                          },
                          {
                            "name": "hash",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "gas",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "gasPrice",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "nonce",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "input",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "transactionIndex",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "fromAddress",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "toAddress",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "value",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "type",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "v",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "r",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "s",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "receiptCumulativeGasUsed",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "receiptGasUsed",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "receiptContractAddress",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "receiptRoot",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "receiptStatus",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          }
                        ]
                      },
                      "type": "array"
                    },
                    {
                      "name": "txsInternal",
                      "required": true,
                      "field": {
                        "type": "object",
                        "fields": [
                          {
                            "name": "from",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "to",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "value",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          },
                          {
                            "name": "transactionHash",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "gas",
                            "type": "string",
                            "nullable": true,
                            "required": true
                          }
                        ]
                      },
                      "type": "array"
                    },
                    {
                      "name": "abi",
                      "field": { "type": "json" },
                      "type": "array",
                      "required": true
                    },
                    {
                      "name": "retries",
                      "type": "number",
                      "format": "double",
                      "required": true
                    },
                    {
                      "name": "confirmed",
                      "type": "boolean",
                      "required": true
                    },
                    { "name": "tag", "type": "string", "required": true },
                    { "name": "streamId", "type": "string", "required": true }
                  ],
                  "additionalProperties": false
                },
                {
                  "name": "tinyPayload",
                  "type": "object",
                  "fields": [
                    {
                      "name": "chainId",
                      "type": "string",
                      "required": true
                    },
                    {
                      "name": "confirmed",
                      "type": "boolean",
                      "required": true
                    },
                    { "name": "block", "type": "string", "required": true },
                    {
                      "name": "records",
                      "type": "number",
                      "format": "double",
                      "required": true
                    },
                    {
                      "name": "retries",
                      "type": "number",
                      "format": "double",
                      "required": true
                    }
                  ],
                  "additionalProperties": false
                },
                { "name": "errorMessage", "type": "string" },
                { "name": "webhookUrl", "type": "string" },
                { "name": "streamId", "type": "string" },
                { "name": "tag", "type": "string" }
              ]
            },
            { "name": "cursor", "type": "string" },
            { "name": "total", "type": "number" }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\nconst streamId = \"stream-1\";\n\n  const { result } = await Moralis.Streams.retry({\n  id,\n  streamId,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"streamId\": \"\", \n    \"id\": \"\", \n}\n\nresult = streams.history.replay_history(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
      }
    ]
  },
  "SetSettings": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Set project settings",
    "description": "Set the settings for the current project based on the project api-key.",
    "method": "POST",
    "path": "/settings",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "type": "object",
      "fields": [
        {
          "name": "region",
          "type": "string",
          "required": true,
          "description": "The region from where all the webhooks will be posted for this project",
          "enum": ["us-east-1", "us-west-2", "eu-central-1", "ap-southeast-1"]
        }
      ]
    },
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "region",
              "type": "string",
              "description": "The region from where all the webhooks will be posted for this project",
              "enum": [
                "us-east-1",
                "us-west-2",
                "eu-central-1",
                "ap-southeast-1"
              ]
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \n  const { result } = await Moralis.Streams.readSettings();\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\n\nresult = streams.project.get_settings(\n    api_key=api_key,\n)\n\nprint(result)\n"
      }
    ]
  },
  "GetSettings": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Get project settings",
    "description": "Get the settings for the current project based on the project api-key.",
    "method": "GET",
    "path": "/settings",
    "pathParams": [],
    "queryParams": [],
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "region",
              "type": "string",
              "description": "The region from where all the webhooks will be posted for this project",
              "enum": [
                "us-east-1",
                "us-west-2",
                "eu-central-1",
                "ap-southeast-1"
              ]
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \n  const { result } = await Moralis.Streams.readSettings();\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\n\nresult = streams.project.get_settings(\n    api_key=api_key,\n)\n\nprint(result)\n"
      }
    ]
  },
  "GetStats": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Get project stats",
    "description": "Get the global stats for the account.",
    "method": "GET",
    "path": "/stats",
    "pathParams": [],
    "queryParams": [],
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "totalWebhooksDelivered",
              "type": "number",
              "description": "The total amount of webhooks delivered across all streams"
            },
            {
              "name": "totalWebhooksFailed",
              "type": "number",
              "description": "The total amount of failed webhooks across all streams"
            },
            {
              "name": "totalLogsProcessed",
              "type": "number",
              "description": "The total amount of logs processed across all streams, this includes failed webhooks"
            },
            {
              "name": "totalTxsProcessed",
              "type": "number",
              "description": "The total amount of txs processed across all streams, this includes failed webhooks"
            },
            {
              "name": "totalTxsInternalProcessed",
              "type": "number",
              "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
            },
            {
              "name": "streams",
              "type": "object",
              "description": "Array of stream stats",
              "fields": [
                {
                  "name": "totalWebhooksDelivered",
                  "type": "number",
                  "description": "The total amount of webhooks delivered across all streams"
                },
                {
                  "name": "totalWebhooksFailed",
                  "type": "number",
                  "description": "The total amount of failed webhooks across all streams"
                },
                {
                  "name": "totalLogsProcessed",
                  "type": "number",
                  "description": "The total amount of logs processed across all streams, this includes failed webhooks"
                },
                {
                  "name": "totalTxsProcessed",
                  "type": "number",
                  "description": "The total amount of txs processed across all streams, this includes failed webhooks"
                },
                {
                  "name": "totalTxsInternalProcessed",
                  "type": "number",
                  "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
                },
                {
                  "name": "streamId",
                  "type": "string",
                  "description": "The stream id"
                }
              ]
            },
            {
              "name": "createdAt",
              "type": "string",
              "description": "The date since this stats are being counted"
            },
            {
              "name": "updatedAt",
              "type": "string",
              "description": "The date since this stats were last updated"
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\n\nresult = streams.stats.get_stats(\n    api_key=api_key,\n)\n\nprint(result)\n"
      }
    ]
  },
  "GetStatsByStreamId": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Get project stats by Stream ID",
    "description": "Get the stats for the streamId specified",
    "method": "GET",
    "path": "/stats/:streamId",
    "pathParams": [
      {
        "name": "streamId",
        "description": "The id of the stream to get the stats",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "totalWebhooksDelivered",
              "type": "number",
              "description": "The total amount of webhooks delivered across all streams"
            },
            {
              "name": "totalWebhooksFailed",
              "type": "number",
              "description": "The total amount of failed webhooks across all streams"
            },
            {
              "name": "totalLogsProcessed",
              "type": "number",
              "description": "The total amount of logs processed across all streams, this includes failed webhooks"
            },
            {
              "name": "totalTxsProcessed",
              "type": "number",
              "description": "The total amount of txs processed across all streams, this includes failed webhooks"
            },
            {
              "name": "totalTxsInternalProcessed",
              "type": "number",
              "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
            },
            {
              "name": "streams",
              "type": "object",
              "description": "Array of stream stats",
              "fields": [
                {
                  "name": "totalWebhooksDelivered",
                  "type": "number",
                  "description": "The total amount of webhooks delivered across all streams"
                },
                {
                  "name": "totalWebhooksFailed",
                  "type": "number",
                  "description": "The total amount of failed webhooks across all streams"
                },
                {
                  "name": "totalLogsProcessed",
                  "type": "number",
                  "description": "The total amount of logs processed across all streams, this includes failed webhooks"
                },
                {
                  "name": "totalTxsProcessed",
                  "type": "number",
                  "description": "The total amount of txs processed across all streams, this includes failed webhooks"
                },
                {
                  "name": "totalTxsInternalProcessed",
                  "type": "number",
                  "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
                },
                {
                  "name": "streamId",
                  "type": "string",
                  "description": "The stream id"
                }
              ]
            },
            {
              "name": "createdAt",
              "type": "string",
              "description": "The date since this stats are being counted"
            },
            {
              "name": "updatedAt",
              "type": "string",
              "description": "The date since this stats were last updated"
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"streamId\": \"\", \n}\n\nresult = streams.stats.get_stats_by_stream_id(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
      }
    ]
  },
  "GetStreams": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Get streams",
    "description": "Get all the evm streams for the current project based on the project api-key.",
    "method": "GET",
    "path": "/streams/evm",
    "pathParams": [],
    "queryParams": [
      {
        "name": "limit",
        "description": "Limit response results max value 100",
        "required": true,
        "type": "number"
      },
      {
        "name": "cursor",
        "description": "Cursor for fetching next page",
        "required": false,
        "type": "string"
      }
    ],
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "result",
              "type": "object",
              "description": "Array of project Streams",
              "fields": [
                {
                  "name": "webhookUrl",
                  "type": "string",
                  "description": "Webhook URL where moralis will send the POST request."
                },
                {
                  "name": "description",
                  "type": "string",
                  "description": "A description for this stream"
                },
                {
                  "name": "tag",
                  "type": "string",
                  "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                },
                {
                  "name": "topic0",
                  "type": "array",
                  "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
                  "field": { "type": "string" }
                },
                {
                  "name": "allAddresses",
                  "type": "boolean",
                  "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
                },
                {
                  "name": "includeNativeTxs",
                  "type": "boolean",
                  "description": "Include or not native transactions defaults to false"
                },
                {
                  "name": "includeContractLogs",
                  "type": "boolean",
                  "description": "Include or not logs of contract interactions defaults to false"
                },
                {
                  "name": "includeInternalTxs",
                  "type": "boolean",
                  "description": "Include or not include internal transactions defaults to false"
                },
                {
                  "name": "getNativeBalances",
                  "type": "object",
                  "description": "Include native balances for each address in the webhook",
                  "fields": [
                    {
                      "name": "selectors",
                      "type": "array",
                      "field": { "type": "string" }
                    },
                    { "name": "type", "type": "string" }
                  ]
                },
                {
                  "name": "abi",
                  "type": "object",
                  "fields": [
                    { "name": "anonymous", "type": "boolean" },
                    { "name": "constant", "type": "boolean" },
                    {
                      "name": "inputs",
                      "type": "object",
                      "fields": [
                        { "name": "name", "type": "string" },
                        { "name": "type", "type": "string" },
                        { "name": "indexed", "type": "boolean" },
                        { "name": "components", "type": "json" },
                        { "name": "internalType", "type": "string" }
                      ]
                    },
                    { "name": "name", "type": "string" },
                    {
                      "name": "outputs",
                      "type": "object",
                      "fields": [
                        { "name": "name", "type": "string" },
                        { "name": "type", "type": "string" },
                        { "name": "components", "type": "json" },
                        { "name": "internalType", "type": "string" }
                      ]
                    },
                    { "name": "payable", "type": "boolean" },
                    { "name": "stateMutability", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "gas", "type": "number" }
                  ]
                },
                {
                  "name": "advancedOptions",
                  "type": "object",
                  "fields": [
                    { "name": "topic0", "type": "string" },
                    {
                      "name": "filter",
                      "type": "json",
                      "description": "The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams",
                      "example": {}
                    },
                    { "name": "includeNativeTxs", "type": "boolean" }
                  ]
                },
                {
                  "name": "chainIds",
                  "type": "array",
                  "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
                  "field": { "type": "string" }
                },
                {
                  "name": "demo",
                  "type": "boolean",
                  "description": "Indicator if it is a demo stream"
                },
                {
                  "name": "triggers",
                  "type": "object",
                  "description": "triggers",
                  "fields": [
                    { "name": "type", "type": "string" },
                    { "name": "contractAddress", "type": "string" },
                    {
                      "name": "inputs",
                      "type": "array",
                      "field": {
                        "anyOf": [{ "type": "string" }, { "type": "json" }]
                      }
                    },
                    {
                      "name": "functionAbi",
                      "type": "object",
                      "description": "The abi to parse the log object of the contract",
                      "fields": [
                        {
                          "name": "anonymous",
                          "type": "boolean"
                        },
                        { "name": "constant", "type": "boolean" },
                        {
                          "name": "inputs",
                          "field": {
                            "type": "json"
                          },
                          "type": "array"
                        },
                        {
                          "name": "name",
                          "type": "string"
                        },
                        {
                          "name": "outputs",
                          "field": {
                            "type": "json"
                          },
                          "type": "array"
                        },
                        { "name": "payable", "type": "boolean" },
                        { "name": "stateMutability", "type": "string" },
                        {
                          "name": "type",
                          "type": "string",
                          "required": true
                        },
                        {
                          "name": "gas",
                          "type": "number",
                          "format": "double"
                        }
                      ],
                      "additionalProperties": false,
                      "example": {}
                    },
                    { "name": "topic0", "type": "string" },
                    { "name": "callFrom", "type": "string" }
                  ]
                },
                {
                  "name": "id",
                  "type": "string",
                  "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                  "format": "uuid",
                  "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
                },
                {
                  "name": "status",
                  "type": "string",
                  "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                  "enum": ["active", "paused", "error", "terminated"]
                },
                {
                  "name": "statusMessage",
                  "type": "string",
                  "description": "Description of current status of stream."
                }
              ]
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Cursor for fetching next page"
            },
            {
              "name": "total",
              "type": "number",
              "description": "Total count of streams on the project"
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst limit = 20;\n\n  const { result } = await Moralis.Streams.getAll({\n  limit,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"limit\": 1.2, \n    \"cursor\": \"\", \n}\n\nresult = streams.evm_streams.get_streams(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
      }
    ]
  },
  "CreateStream": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Create stream",
    "description": "Creates a new evm stream.",
    "method": "PUT",
    "path": "/streams/evm",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Provide a Stream Model",
      "type": "object",
      "fields": [
        {
          "name": "webhookUrl",
          "type": "string",
          "required": true,
          "description": "Webhook URL where moralis will send the POST request."
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "description": "A description for this stream"
        },
        {
          "name": "tag",
          "type": "string",
          "required": true,
          "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
        },
        {
          "name": "topic0",
          "type": "array",
          "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
          "field": { "type": "string" }
        },
        {
          "name": "allAddresses",
          "type": "boolean",
          "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
        },
        {
          "name": "includeNativeTxs",
          "type": "boolean",
          "description": "Include or not native transactions defaults to false"
        },
        {
          "name": "includeContractLogs",
          "type": "boolean",
          "description": "Include or not logs of contract interactions defaults to false"
        },
        {
          "name": "includeInternalTxs",
          "type": "boolean",
          "description": "Include or not include internal transactions defaults to false"
        },
        {
          "name": "getNativeBalances",
          "type": "object",
          "description": "Include native balances for each address in the webhook",
          "fields": [
            {
              "name": "selectors",
              "type": "array",
              "field": { "type": "string" }
            },
            { "name": "type", "type": "string" }
          ]
        },
        {
          "name": "abi",
          "type": "object",
          "fields": [
            { "name": "anonymous", "type": "boolean" },
            { "name": "constant", "type": "boolean" },
            {
              "name": "inputs",
              "type": "object",
              "fields": [
                { "name": "name", "type": "string" },
                { "name": "type", "type": "string" },
                { "name": "indexed", "type": "boolean" },
                { "name": "components", "type": "json" },
                { "name": "internalType", "type": "string" }
              ]
            },
            { "name": "name", "type": "string" },
            {
              "name": "outputs",
              "type": "object",
              "fields": [
                { "name": "name", "type": "string" },
                { "name": "type", "type": "string" },
                { "name": "components", "type": "json" },
                { "name": "internalType", "type": "string" }
              ]
            },
            { "name": "payable", "type": "boolean" },
            { "name": "stateMutability", "type": "string" },
            { "name": "type", "type": "string" },
            { "name": "gas", "type": "number" }
          ]
        },
        {
          "name": "advancedOptions",
          "type": "object",
          "fields": [
            { "name": "topic0", "type": "string" },
            {
              "name": "filter",
              "type": "json",
              "description": "The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams",
              "example": {}
            },
            { "name": "includeNativeTxs", "type": "boolean" }
          ]
        },
        {
          "name": "chainIds",
          "type": "array",
          "required": true,
          "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
          "field": { "type": "string" }
        },
        {
          "name": "demo",
          "type": "boolean",
          "description": "Indicator if it is a demo stream"
        },
        {
          "name": "triggers",
          "type": "object",
          "description": "triggers",
          "fields": [
            { "name": "type", "type": "string" },
            { "name": "contractAddress", "type": "string" },
            {
              "name": "inputs",
              "type": "array",
              "field": {
                "anyOf": [{ "type": "string" }, { "type": "json" }]
              }
            },
            {
              "name": "functionAbi",
              "type": "object",
              "description": "The abi to parse the log object of the contract",
              "fields": [
                {
                  "name": "anonymous",
                  "type": "boolean"
                },
                { "name": "constant", "type": "boolean" },
                {
                  "name": "inputs",
                  "field": { "type": "json" },
                  "type": "array"
                },
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "outputs",
                  "field": { "type": "json" },
                  "type": "array"
                },
                {
                  "name": "payable",
                  "type": "boolean"
                },
                { "name": "stateMutability", "type": "string" },
                { "name": "type", "type": "string", "required": true },
                { "name": "gas", "type": "number", "format": "double" }
              ],
              "example": {}
            },
            { "name": "topic0", "type": "string" },
            { "name": "callFrom", "type": "string" }
          ]
        }
      ]
    },
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "webhookUrl",
              "type": "string",
              "description": "Webhook URL where moralis will send the POST request."
            },
            {
              "name": "description",
              "type": "string",
              "description": "A description for this stream"
            },
            {
              "name": "tag",
              "type": "string",
              "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
            },
            {
              "name": "topic0",
              "type": "array",
              "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
              "field": { "type": "string" }
            },
            {
              "name": "allAddresses",
              "type": "boolean",
              "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
            },
            {
              "name": "includeNativeTxs",
              "type": "boolean",
              "description": "Include or not native transactions defaults to false"
            },
            {
              "name": "includeContractLogs",
              "type": "boolean",
              "description": "Include or not logs of contract interactions defaults to false"
            },
            {
              "name": "includeInternalTxs",
              "type": "boolean",
              "description": "Include or not include internal transactions defaults to false"
            },
            {
              "name": "getNativeBalances",
              "type": "object",
              "description": "Include native balances for each address in the webhook",
              "fields": [
                {
                  "name": "selectors",
                  "type": "array",
                  "field": { "type": "string" }
                },
                { "name": "type", "type": "string" }
              ]
            },
            {
              "name": "abi",
              "type": "object",
              "fields": [
                { "name": "anonymous", "type": "boolean" },
                { "name": "constant", "type": "boolean" },
                {
                  "name": "inputs",
                  "type": "object",
                  "fields": [
                    { "name": "name", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "indexed", "type": "boolean" },
                    { "name": "components", "type": "json" },
                    { "name": "internalType", "type": "string" }
                  ]
                },
                { "name": "name", "type": "string" },
                {
                  "name": "outputs",
                  "type": "object",
                  "fields": [
                    { "name": "name", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "components", "type": "json" },
                    { "name": "internalType", "type": "string" }
                  ]
                },
                { "name": "payable", "type": "boolean" },
                { "name": "stateMutability", "type": "string" },
                { "name": "type", "type": "string" },
                { "name": "gas", "type": "number" }
              ]
            },
            {
              "name": "advancedOptions",
              "type": "object",
              "fields": [
                { "name": "topic0", "type": "string" },
                {
                  "name": "filter",
                  "type": "json",
                  "description": "The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams",
                  "example": {}
                },
                { "name": "includeNativeTxs", "type": "boolean" }
              ]
            },
            {
              "name": "chainIds",
              "type": "array",
              "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
              "field": { "type": "string" }
            },
            {
              "name": "demo",
              "type": "boolean",
              "description": "Indicator if it is a demo stream"
            },
            {
              "name": "triggers",
              "type": "object",
              "description": "triggers",
              "fields": [
                { "name": "type", "type": "string" },
                { "name": "contractAddress", "type": "string" },
                {
                  "name": "inputs",
                  "type": "array",
                  "field": {
                    "anyOf": [{ "type": "string" }, { "type": "json" }]
                  }
                },
                {
                  "name": "functionAbi",
                  "type": "object",
                  "description": "The abi to parse the log object of the contract",
                  "fields": [
                    {
                      "name": "anonymous",
                      "type": "boolean"
                    },
                    { "name": "constant", "type": "boolean" },
                    {
                      "name": "inputs",
                      "field": { "type": "json" },
                      "type": "array"
                    },
                    { "name": "name", "type": "string" },
                    {
                      "name": "outputs",
                      "field": { "type": "json" },
                      "type": "array"
                    },
                    { "name": "payable", "type": "boolean" },
                    { "name": "stateMutability", "type": "string" },
                    { "name": "type", "type": "string", "required": true },
                    { "name": "gas", "type": "number", "format": "double" }
                  ],
                  "additionalProperties": false,
                  "example": {}
                },
                { "name": "topic0", "type": "string" },
                { "name": "callFrom", "type": "string" }
              ]
            },
            {
              "name": "id",
              "type": "string",
              "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
              "format": "uuid",
              "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            {
              "name": "status",
              "type": "string",
              "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
              "enum": ["active", "paused", "error", "terminated"]
            },
            {
              "name": "statusMessage",
              "type": "string",
              "description": "Description of current status of stream."
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst limit = 20;\n\n  const { result } = await Moralis.Streams.getAll({\n  limit,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"limit\": 1.2, \n    \"cursor\": \"\", \n}\n\nresult = streams.evm_streams.get_streams(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
      }
    ]
  },
  "GetStream": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Get a specific evm stream.",
    "description": "Get a specific evm stream.",
    "method": "GET",
    "path": "/streams/evm/:id",
    "pathParams": [
      {
        "name": "id",
        "description": "The id of the stream to get",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "webhookUrl",
              "type": "string",
              "description": "Webhook URL where moralis will send the POST request."
            },
            {
              "name": "description",
              "type": "string",
              "description": "A description for this stream"
            },
            {
              "name": "tag",
              "type": "string",
              "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
            },
            {
              "name": "topic0",
              "type": "array",
              "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
              "field": { "type": "string" }
            },
            {
              "name": "allAddresses",
              "type": "boolean",
              "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
            },
            {
              "name": "includeNativeTxs",
              "type": "boolean",
              "description": "Include or not native transactions defaults to false"
            },
            {
              "name": "includeContractLogs",
              "type": "boolean",
              "description": "Include or not logs of contract interactions defaults to false"
            },
            {
              "name": "includeInternalTxs",
              "type": "boolean",
              "description": "Include or not include internal transactions defaults to false"
            },
            {
              "name": "getNativeBalances",
              "type": "object",
              "description": "Include native balances for each address in the webhook",
              "fields": [
                {
                  "name": "selectors",
                  "type": "array",
                  "field": { "type": "string" }
                },
                { "name": "type", "type": "string" }
              ]
            },
            {
              "name": "abi",
              "type": "object",
              "fields": [
                { "name": "anonymous", "type": "boolean" },
                { "name": "constant", "type": "boolean" },
                {
                  "name": "inputs",
                  "type": "object",
                  "fields": [
                    { "name": "name", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "indexed", "type": "boolean" },
                    { "name": "components", "type": "json" },
                    { "name": "internalType", "type": "string" }
                  ]
                },
                { "name": "name", "type": "string" },
                {
                  "name": "outputs",
                  "type": "object",
                  "fields": [
                    { "name": "name", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "components", "type": "json" },
                    { "name": "internalType", "type": "string" }
                  ]
                },
                { "name": "payable", "type": "boolean" },
                { "name": "stateMutability", "type": "string" },
                { "name": "type", "type": "string" },
                { "name": "gas", "type": "number" }
              ]
            },
            {
              "name": "advancedOptions",
              "type": "object",
              "fields": [
                { "name": "topic0", "type": "string" },
                {
                  "name": "filter",
                  "type": "json",
                  "description": "The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams",
                  "example": {}
                },
                { "name": "includeNativeTxs", "type": "boolean" }
              ]
            },
            {
              "name": "chainIds",
              "type": "array",
              "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
              "field": { "type": "string" }
            },
            {
              "name": "demo",
              "type": "boolean",
              "description": "Indicator if it is a demo stream"
            },
            {
              "name": "triggers",
              "type": "object",
              "description": "triggers",
              "fields": [
                { "name": "type", "type": "string" },
                { "name": "contractAddress", "type": "string" },
                {
                  "name": "inputs",
                  "type": "array",
                  "field": {
                    "anyOf": [{ "type": "string" }, { "type": "json" }]
                  }
                },
                {
                  "name": "functionAbi",
                  "type": "object",
                  "description": "The abi to parse the log object of the contract",
                  "fields": [
                    {
                      "name": "anonymous",
                      "type": "boolean"
                    },
                    { "name": "constant", "type": "boolean" },
                    {
                      "name": "inputs",
                      "field": { "type": "json" },
                      "type": "array"
                    },
                    { "name": "name", "type": "string" },
                    {
                      "name": "outputs",
                      "field": { "type": "json" },
                      "type": "array"
                    },
                    { "name": "payable", "type": "boolean" },
                    { "name": "stateMutability", "type": "string" },
                    { "name": "type", "type": "string", "required": true },
                    { "name": "gas", "type": "number", "format": "double" }
                  ],
                  "additionalProperties": false,
                  "example": {}
                },
                { "name": "topic0", "type": "string" },
                { "name": "callFrom", "type": "string" }
              ]
            },
            {
              "name": "id",
              "type": "string",
              "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
              "format": "uuid",
              "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            {
              "name": "status",
              "type": "string",
              "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
              "enum": ["active", "paused", "error", "terminated"]
            },
            {
              "name": "statusMessage",
              "type": "string",
              "description": "Description of current status of stream."
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\n\n  const { result } = await Moralis.Streams.getById({\n  id,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\n\nresult = streams.evm_streams.get_stream(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
      }
    ]
  },
  "UpdateStream": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Update stream",
    "description": "Updates a specific evm stream.",
    "method": "POST",
    "path": "/streams/evm/:id",
    "pathParams": [
      {
        "name": "id",
        "description": "The id of the stream to update",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Provide a Stream Model",
      "type": "object",
      "fields": [
        {
          "name": "webhookUrl",
          "type": "string",
          "description": "Webhook URL where moralis will send the POST request."
        },
        {
          "name": "description",
          "type": "string",
          "description": "A description for this stream"
        },
        {
          "name": "tag",
          "type": "string",
          "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
        },
        {
          "name": "topic0",
          "type": "array",
          "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
          "field": { "type": "string" }
        },
        {
          "name": "allAddresses",
          "type": "boolean",
          "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
        },
        {
          "name": "includeNativeTxs",
          "type": "boolean",
          "description": "Include or not native transactions defaults to false"
        },
        {
          "name": "includeContractLogs",
          "type": "boolean",
          "description": "Include or not logs of contract interactions defaults to false"
        },
        {
          "name": "includeInternalTxs",
          "type": "boolean",
          "description": "Include or not include internal transactions defaults to false"
        },
        {
          "name": "getNativeBalances",
          "type": "object",
          "description": "Include native balances for each address in the webhook",
          "fields": [
            {
              "name": "selectors",
              "type": "array",
              "field": { "type": "string" }
            },
            { "name": "type", "type": "string" }
          ]
        },
        {
          "name": "abi",
          "type": "object",
          "fields": [
            { "name": "anonymous", "type": "boolean" },
            { "name": "constant", "type": "boolean" },
            {
              "name": "inputs",
              "type": "object",
              "fields": [
                { "name": "name", "type": "string" },
                { "name": "type", "type": "string" },
                { "name": "indexed", "type": "boolean" },
                { "name": "components", "type": "json" },
                { "name": "internalType", "type": "string" }
              ]
            },
            { "name": "name", "type": "string" },
            {
              "name": "outputs",
              "type": "object",
              "fields": [
                { "name": "name", "type": "string" },
                { "name": "type", "type": "string" },
                { "name": "components", "type": "json" },
                { "name": "internalType", "type": "string" }
              ]
            },
            { "name": "payable", "type": "boolean" },
            { "name": "stateMutability", "type": "string" },
            { "name": "type", "type": "string" },
            { "name": "gas", "type": "number" }
          ]
        },
        {
          "name": "advancedOptions",
          "type": "object",
          "fields": [
            { "name": "topic0", "type": "string" },
            {
              "name": "filter",
              "type": "json",
              "description": "The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams",
              "example": {}
            },
            { "name": "includeNativeTxs", "type": "boolean" }
          ]
        },
        {
          "name": "chainIds",
          "type": "array",
          "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
          "field": { "type": "string" }
        },
        {
          "name": "demo",
          "type": "boolean",
          "description": "Indicator if it is a demo stream"
        },
        {
          "name": "triggers",
          "type": "object",
          "description": "triggers",
          "fields": [
            { "name": "type", "type": "string" },
            { "name": "contractAddress", "type": "string" },
            {
              "name": "inputs",
              "type": "array",
              "field": {
                "anyOf": [{ "type": "string" }, { "type": "json" }]
              }
            },
            {
              "name": "functionAbi",
              "type": "object",
              "description": "The abi to parse the log object of the contract",
              "fields": [
                {
                  "name": "anonymous",
                  "type": "boolean"
                },
                { "name": "constant", "type": "boolean" },
                {
                  "name": "inputs",
                  "field": { "type": "json" },
                  "type": "array"
                },
                { "name": "name", "type": "string" },
                {
                  "name": "outputs",
                  "field": { "type": "json" },
                  "type": "array"
                },
                { "name": "payable", "type": "boolean" },
                { "name": "stateMutability", "type": "string" },
                { "name": "type", "type": "string", "required": true },
                { "name": "gas", "type": "number", "format": "double" }
              ],
              "additionalProperties": false,
              "example": {}
            },
            { "name": "topic0", "type": "string" },
            { "name": "callFrom", "type": "string" }
          ]
        }
      ]
    },
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "webhookUrl",
              "type": "string",
              "description": "Webhook URL where moralis will send the POST request."
            },
            {
              "name": "description",
              "type": "string",
              "description": "A description for this stream"
            },
            {
              "name": "tag",
              "type": "string",
              "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
            },
            {
              "name": "topic0",
              "type": "array",
              "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
              "field": { "type": "string" }
            },
            {
              "name": "allAddresses",
              "type": "boolean",
              "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
            },
            {
              "name": "includeNativeTxs",
              "type": "boolean",
              "description": "Include or not native transactions defaults to false"
            },
            {
              "name": "includeContractLogs",
              "type": "boolean",
              "description": "Include or not logs of contract interactions defaults to false"
            },
            {
              "name": "includeInternalTxs",
              "type": "boolean",
              "description": "Include or not include internal transactions defaults to false"
            },
            {
              "name": "getNativeBalances",
              "type": "object",
              "description": "Include native balances for each address in the webhook",
              "fields": [
                {
                  "name": "selectors",
                  "type": "array",
                  "field": { "type": "string" }
                },
                { "name": "type", "type": "string" }
              ]
            },
            {
              "name": "abi",
              "type": "object",
              "fields": [
                { "name": "anonymous", "type": "boolean" },
                { "name": "constant", "type": "boolean" },
                {
                  "name": "inputs",
                  "type": "object",
                  "fields": [
                    { "name": "name", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "indexed", "type": "boolean" },
                    { "name": "components", "type": "json" },
                    { "name": "internalType", "type": "string" }
                  ]
                },
                { "name": "name", "type": "string" },
                {
                  "name": "outputs",
                  "type": "object",
                  "fields": [
                    { "name": "name", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "components", "type": "json" },
                    { "name": "internalType", "type": "string" }
                  ]
                },
                { "name": "payable", "type": "boolean" },
                { "name": "stateMutability", "type": "string" },
                { "name": "type", "type": "string" },
                { "name": "gas", "type": "number" }
              ]
            },
            {
              "name": "advancedOptions",
              "type": "object",
              "fields": [
                { "name": "topic0", "type": "string" },
                {
                  "name": "filter",
                  "type": "json",
                  "description": "The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams",
                  "example": {}
                },
                { "name": "includeNativeTxs", "type": "boolean" }
              ]
            },
            {
              "name": "chainIds",
              "type": "array",
              "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
              "field": { "type": "string" }
            },
            {
              "name": "demo",
              "type": "boolean",
              "description": "Indicator if it is a demo stream"
            },
            {
              "name": "triggers",
              "type": "object",
              "description": "triggers",
              "fields": [
                { "name": "type", "type": "string" },
                { "name": "contractAddress", "type": "string" },
                {
                  "name": "inputs",
                  "type": "array",
                  "field": {
                    "anyOf": [{ "type": "string" }, { "type": "json" }]
                  }
                },
                {
                  "name": "functionAbi",
                  "type": "object",
                  "description": "The abi to parse the log object of the contract",
                  "fields": [
                    {
                      "name": "anonymous",
                      "type": "boolean"
                    },
                    { "name": "constant", "type": "boolean" },
                    {
                      "name": "inputs",
                      "field": { "type": "json" },
                      "type": "array"
                    },
                    { "name": "name", "type": "string" },
                    {
                      "name": "outputs",
                      "field": { "type": "json" },
                      "type": "array"
                    },
                    { "name": "payable", "type": "boolean" },
                    { "name": "stateMutability", "type": "string" },
                    { "name": "type", "type": "string", "required": true },
                    { "name": "gas", "type": "number", "format": "double" }
                  ],
                  "additionalProperties": false,
                  "example": {}
                },
                { "name": "topic0", "type": "string" },
                { "name": "callFrom", "type": "string" }
              ]
            },
            {
              "name": "id",
              "type": "string",
              "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
              "format": "uuid",
              "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            {
              "name": "status",
              "type": "string",
              "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
              "enum": ["active", "paused", "error", "terminated"]
            },
            {
              "name": "statusMessage",
              "type": "string",
              "description": "Description of current status of stream."
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\n\n  const { result } = await Moralis.Streams.getById({\n  id,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\n\nresult = streams.evm_streams.get_stream(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
      }
    ]
  },
  "DeleteStream": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Delete stream",
    "description": "Delete a specific evm stream.",
    "method": "DELETE",
    "path": "/streams/evm/:id",
    "pathParams": [
      {
        "name": "id",
        "description": "The id of the stream to delete",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "webhookUrl",
              "type": "string",
              "description": "Webhook URL where moralis will send the POST request."
            },
            {
              "name": "description",
              "type": "string",
              "description": "A description for this stream"
            },
            {
              "name": "tag",
              "type": "string",
              "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
            },
            {
              "name": "topic0",
              "type": "array",
              "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
              "field": { "type": "string" }
            },
            {
              "name": "allAddresses",
              "type": "boolean",
              "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
            },
            {
              "name": "includeNativeTxs",
              "type": "boolean",
              "description": "Include or not native transactions defaults to false"
            },
            {
              "name": "includeContractLogs",
              "type": "boolean",
              "description": "Include or not logs of contract interactions defaults to false"
            },
            {
              "name": "includeInternalTxs",
              "type": "boolean",
              "description": "Include or not include internal transactions defaults to false"
            },
            {
              "name": "getNativeBalances",
              "type": "object",
              "description": "Include native balances for each address in the webhook",
              "fields": [
                {
                  "name": "selectors",
                  "type": "array",
                  "field": { "type": "string" }
                },
                { "name": "type", "type": "string" }
              ]
            },
            {
              "name": "abi",
              "type": "object",
              "fields": [
                { "name": "anonymous", "type": "boolean" },
                { "name": "constant", "type": "boolean" },
                {
                  "name": "inputs",
                  "type": "object",
                  "fields": [
                    { "name": "name", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "indexed", "type": "boolean" },
                    { "name": "components", "type": "json" },
                    { "name": "internalType", "type": "string" }
                  ]
                },
                { "name": "name", "type": "string" },
                {
                  "name": "outputs",
                  "type": "object",
                  "fields": [
                    { "name": "name", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "components", "type": "json" },
                    { "name": "internalType", "type": "string" }
                  ]
                },
                { "name": "payable", "type": "boolean" },
                { "name": "stateMutability", "type": "string" },
                { "name": "type", "type": "string" },
                { "name": "gas", "type": "number" }
              ]
            },
            {
              "name": "advancedOptions",
              "type": "object",
              "fields": [
                { "name": "topic0", "type": "string" },
                {
                  "name": "filter",
                  "type": "json",
                  "description": "The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams",
                  "example": {}
                },
                { "name": "includeNativeTxs", "type": "boolean" }
              ]
            },
            {
              "name": "chainIds",
              "type": "array",
              "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
              "field": { "type": "string" }
            },
            {
              "name": "demo",
              "type": "boolean",
              "description": "Indicator if it is a demo stream"
            },
            {
              "name": "triggers",
              "type": "object",
              "description": "triggers",
              "fields": [
                { "name": "type", "type": "string" },
                { "name": "contractAddress", "type": "string" },
                {
                  "name": "inputs",
                  "type": "array",
                  "field": {
                    "anyOf": [{ "type": "string" }, { "type": "json" }]
                  }
                },
                {
                  "name": "functionAbi",
                  "type": "object",
                  "description": "The abi to parse the log object of the contract",
                  "fields": [
                    {
                      "name": "anonymous",
                      "type": "boolean"
                    },
                    { "name": "constant", "type": "boolean" },
                    {
                      "name": "inputs",
                      "field": { "type": "json" },
                      "type": "array"
                    },
                    { "name": "name", "type": "string" },
                    {
                      "name": "outputs",
                      "field": { "type": "json" },
                      "type": "array"
                    },
                    { "name": "payable", "type": "boolean" },
                    { "name": "stateMutability", "type": "string" },
                    { "name": "type", "type": "string", "required": true },
                    { "name": "gas", "type": "number", "format": "double" }
                  ],
                  "additionalProperties": false,
                  "example": {}
                },
                { "name": "topic0", "type": "string" },
                { "name": "callFrom", "type": "string" }
              ]
            },
            {
              "name": "id",
              "type": "string",
              "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
              "format": "uuid",
              "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            {
              "name": "status",
              "type": "string",
              "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
              "enum": ["active", "paused", "error", "terminated"]
            },
            {
              "name": "statusMessage",
              "type": "string",
              "description": "Description of current status of stream."
            }
          ]
        }
      }
    ]
  },
  "UpdateStreamStatus": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Update stream status",
    "description": "Updates the status of specific evm stream.",
    "method": "POST",
    "path": "/streams/evm/:id/status",
    "pathParams": [
      {
        "name": "id",
        "description": "The id of the stream to update",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Provide a Stream Model",
      "type": "object",
      "fields": [
        {
          "name": "status",
          "type": "string",
          "required": true,
          "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
          "enum": ["active", "paused", "error", "terminated"]
        }
      ]
    },
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "webhookUrl",
              "type": "string",
              "description": "Webhook URL where moralis will send the POST request."
            },
            {
              "name": "description",
              "type": "string",
              "description": "A description for this stream"
            },
            {
              "name": "tag",
              "type": "string",
              "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
            },
            {
              "name": "topic0",
              "type": "array",
              "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']",
              "field": { "type": "string" }
            },
            {
              "name": "allAddresses",
              "type": "boolean",
              "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
            },
            {
              "name": "includeNativeTxs",
              "type": "boolean",
              "description": "Include or not native transactions defaults to false"
            },
            {
              "name": "includeContractLogs",
              "type": "boolean",
              "description": "Include or not logs of contract interactions defaults to false"
            },
            {
              "name": "includeInternalTxs",
              "type": "boolean",
              "description": "Include or not include internal transactions defaults to false"
            },
            {
              "name": "getNativeBalances",
              "type": "object",
              "description": "Include native balances for each address in the webhook",
              "fields": [
                {
                  "name": "selectors",
                  "type": "array",
                  "field": { "type": "string" }
                },
                { "name": "type", "type": "string" }
              ]
            },
            {
              "name": "abi",
              "type": "object",
              "fields": [
                { "name": "anonymous", "type": "boolean" },
                { "name": "constant", "type": "boolean" },
                {
                  "name": "inputs",
                  "type": "object",
                  "fields": [
                    { "name": "name", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "indexed", "type": "boolean" },
                    { "name": "components", "type": "json" },
                    { "name": "internalType", "type": "string" }
                  ]
                },
                { "name": "name", "type": "string" },
                {
                  "name": "outputs",
                  "type": "object",
                  "fields": [
                    { "name": "name", "type": "string" },
                    { "name": "type", "type": "string" },
                    { "name": "components", "type": "json" },
                    { "name": "internalType", "type": "string" }
                  ]
                },
                { "name": "payable", "type": "boolean" },
                { "name": "stateMutability", "type": "string" },
                { "name": "type", "type": "string" },
                { "name": "gas", "type": "number" }
              ]
            },
            {
              "name": "advancedOptions",
              "type": "object",
              "fields": [
                { "name": "topic0", "type": "string" },
                {
                  "name": "filter",
                  "type": "json",
                  "description": "The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams",
                  "example": {}
                },
                { "name": "includeNativeTxs", "type": "boolean" }
              ]
            },
            {
              "name": "chainIds",
              "type": "array",
              "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]",
              "field": { "type": "string" }
            },
            {
              "name": "demo",
              "type": "boolean",
              "description": "Indicator if it is a demo stream"
            },
            {
              "name": "triggers",
              "type": "object",
              "description": "triggers",
              "fields": [
                { "name": "type", "type": "string" },
                { "name": "contractAddress", "type": "string" },
                {
                  "name": "inputs",
                  "type": "array",
                  "field": {
                    "anyOf": [{ "type": "string" }, { "type": "json" }]
                  }
                },
                {
                  "name": "functionAbi",
                  "type": "object",
                  "description": "The abi to parse the log object of the contract",
                  "fields": [
                    {
                      "name": "anonymous",
                      "type": "boolean"
                    },
                    { "name": "constant", "type": "boolean" },
                    {
                      "name": "inputs",
                      "field": { "type": "json" },
                      "type": "array"
                    },
                    { "name": "name", "type": "string" },
                    {
                      "name": "outputs",
                      "field": { "type": "json" },
                      "type": "array"
                    },
                    { "name": "payable", "type": "boolean" },
                    { "name": "stateMutability", "type": "string" },
                    { "name": "type", "type": "string", "required": true },
                    { "name": "gas", "type": "number", "format": "double" }
                  ],
                  "additionalProperties": false,
                  "example": {}
                },
                { "name": "topic0", "type": "string" },
                { "name": "callFrom", "type": "string" }
              ]
            },
            {
              "name": "id",
              "type": "string",
              "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
              "format": "uuid",
              "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            {
              "name": "status",
              "type": "string",
              "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
              "enum": ["active", "paused", "error", "terminated"]
            },
            {
              "name": "statusMessage",
              "type": "string",
              "description": "Description of current status of stream."
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\nconst status = \"paused\";\n\n  const { result } = await Moralis.Streams.updateStatus({\n  id,\n  status,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\nbody = {\n    \"status\": \"\", \n}\n\nresult = streams.evm_streams.update_stream_status(\n    api_key=api_key,\n    params=params,\n    body=body,\n)\n\nprint(result)\n"
      }
    ]
  },
  "GetAddresses": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Get addresses by stream",
    "description": "Get all addresses associated with a specific stream.",
    "method": "GET",
    "path": "/streams/evm/:id/address",
    "pathParams": [
      {
        "name": "id",
        "description": "the id of the stream to get the addresses from",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "limit",
        "description": "Limit response results max value 100",
        "required": true,
        "type": "number"
      },
      {
        "name": "cursor",
        "description": "Cursor for fetching next page",
        "required": false,
        "type": "string"
      }
    ],
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "result",
              "type": "object",
              "description": "Array of project Streams",
              "fields": [
                {
                  "name": "address",
                  "type": "string",
                  "description": "Address"
                }
              ]
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Cursor for fetching next page"
            },
            {
              "name": "total",
              "type": "number",
              "description": "Total count of streams on the project"
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\n\n  const { result } = await Moralis.Streams.getAddresses({\n  id,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n    \"limit\": 1.2, \n    \"cursor\": \"\", \n}\n\nresult = streams.evm_streams.get_addresses(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
      }
    ]
  },
  "AddAddressToStream": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Add address to stream",
    "description": "Adds an address to a Stream.",
    "method": "POST",
    "path": "/streams/evm/:id/address",
    "pathParams": [
      {
        "name": "id",
        "description": "The id of the stream to add the address to",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Provide a Address Model",
      "type": "object",
      "fields": [
        {
          "name": "address",
          "description": "The address or a list of addresses to be added to the Stream.",
          "type": "oneOf",
          "required": true,
          "options": [
            { "type": "string" },
            { "field": { "type": "string" }, "type": "array" }
          ]
        }
      ]
    },
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "streamId",
              "type": "string",
              "description": "The streamId"
            },
            {
              "name": "address",
              "description": "Address",
              "type": "oneOf",
              "options": [
                { "type": "string" },
                { "field": { "type": "string" }, "type": "array" }
              ]
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\n\n  const { result } = await Moralis.Streams.getAddresses({\n  id,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n    \"limit\": 1.2, \n    \"cursor\": \"\", \n}\n\nresult = streams.evm_streams.get_addresses(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
      }
    ]
  },
  "DeleteAddressFromStream": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Delete address from stream",
    "description": "Deletes an address from a Stream.",
    "method": "DELETE",
    "path": "/streams/evm/:id/address",
    "pathParams": [
      {
        "name": "id",
        "description": "The id of the stream to delete the address from",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Provide a Address Model",
      "type": "object",
      "fields": [
        {
          "name": "address",
          "description": "The address or a list of addresses to be removed from the Stream.",
          "type": "oneOf",
          "options": [
            { "type": "string" },
            { "field": { "type": "string" }, "type": "array" }
          ]
        }
      ]
    },
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "streamId",
              "type": "string",
              "description": "The streamId"
            },
            {
              "name": "address",
              "description": "Address",
              "type": "oneOf",
              "options": [
                { "type": "string" },
                { "field": { "type": "string" }, "type": "array" }
              ]
            }
          ]
        }
      }
    ]
  },
  "aptosStreamsGetAll": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Gets all aptos streams.",
    "description": "Get all aptos streams.",
    "method": "GET",
    "path": "/streams/aptos",
    "pathParams": [],
    "queryParams": [
      {
        "name": "limit",
        "description": "Limit response results max value 100",
        "required": true,
        "type": "number"
      },
      {
        "name": "cursor",
        "description": "Cursor for fetching next page",
        "required": false,
        "type": "string"
      }
    ],
    "responses": [{ "status": "200", "description": "Ok" }]
  },
  "aptosStreamsCreate": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Create stream",
    "description": "Creates a new aptos stream.",
    "method": "PUT",
    "path": "/streams/aptos",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Provide a valid Aptos Stream Model",
      "type": "object",
      "fields": [
        {
          "name": "webhookUrl",
          "type": "string",
          "description": "Webhook URL where moralis will send the POST request."
        },
        {
          "name": "tag",
          "type": "string",
          "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
        },
        {
          "name": "functions",
          "type": "array",
          "description": "An Array of events in string-signature format ex: ['0x1::aptos_account::transfer']",
          "field": { "type": "string" }
        },
        {
          "name": "events",
          "type": "array",
          "description": "An Array of events in string-signature format ex: ['0x1::coin::WithdrawEvent']",
          "field": { "type": "string" }
        },
        {
          "name": "network",
          "type": "array",
          "description": "The network to listen to",
          "field": { "type": "string", "enum": ["mainnet", "testnet"] }
        },
        {
          "name": "includePayload",
          "type": "boolean",
          "description": "Include or not payload for every transaction in webhook defaults to false"
        },
        {
          "name": "includeEvents",
          "type": "boolean",
          "description": "Include or not events in webhook defaults to false"
        },
        {
          "name": "includeChanges",
          "type": "boolean",
          "description": "Include or not raw changes for every transaction in webhook defaults to false"
        },
        {
          "name": "description",
          "type": "string",
          "description": "A description for this stream"
        },
        {
          "name": "demo",
          "type": "boolean",
          "description": "Indicator if it is a demo stream"
        },
        {
          "name": "allAddresses",
          "type": "boolean",
          "description": "Include events for all addresses (only applied when at least one event or function is provided)"
        }
      ]
    },
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            { "name": "id", "type": "string" },
            { "name": "allAddresses", "type": "boolean" },
            { "name": "demo", "type": "boolean" },
            { "name": "description", "type": "string" },
            { "name": "includeChanges", "type": "boolean" },
            { "name": "includeEvents", "type": "boolean" },
            { "name": "includePayload", "type": "boolean" },
            { "name": "isErrorSince", "type": "string" },
            {
              "name": "network",
              "type": "array",
              "field": { "type": "string", "enum": ["mainnet", "testnet"] }
            },
            {
              "name": "status",
              "type": "string",
              "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
              "enum": ["active", "paused", "error", "terminated"]
            },
            { "name": "statusMessage", "type": "string" },
            {
              "name": "events",
              "type": "array",
              "field": { "type": "string" }
            },
            {
              "name": "functions",
              "type": "array",
              "field": { "type": "string" }
            },
            { "name": "tag", "type": "string" },
            { "name": "webhookUrl", "type": "string" },
            { "name": "amountOfAddresses", "type": "number" }
          ]
        }
      }
    ]
  },
  "aptosStreamsGet": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Get a specific aptos stream.",
    "description": "Get a specific aptos stream.",
    "method": "GET",
    "path": "/streams/aptos/:id",
    "pathParams": [
      {
        "name": "id",
        "description": "The id of the stream to get",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            { "name": "id", "type": "string" },
            { "name": "allAddresses", "type": "boolean" },
            { "name": "demo", "type": "boolean" },
            { "name": "description", "type": "string" },
            { "name": "includeChanges", "type": "boolean" },
            { "name": "includeEvents", "type": "boolean" },
            { "name": "includePayload", "type": "boolean" },
            { "name": "isErrorSince", "type": "string" },
            {
              "name": "network",
              "type": "array",
              "field": { "type": "string", "enum": ["mainnet", "testnet"] }
            },
            {
              "name": "status",
              "type": "string",
              "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
              "enum": ["active", "paused", "error", "terminated"]
            },
            { "name": "statusMessage", "type": "string" },
            {
              "name": "events",
              "type": "array",
              "field": { "type": "string" }
            },
            {
              "name": "functions",
              "type": "array",
              "field": { "type": "string" }
            },
            { "name": "tag", "type": "string" },
            { "name": "webhookUrl", "type": "string" },
            { "name": "amountOfAddresses", "type": "number" }
          ]
        }
      }
    ]
  },
  "aptosStreamsUpdate": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Update stream",
    "description": "Updates a new aptos stream.",
    "method": "POST",
    "path": "/streams/aptos/:id",
    "pathParams": [{ "name": "id", "required": true, "type": "string" }],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Provide valid values of a Aptos Stream Model",
      "type": "object",
      "fields": [
        {
          "name": "allAddresses",
          "type": "boolean",
          "description": "Include events for all addresses (only applied when at least one event or function is provided)"
        },
        {
          "name": "demo",
          "type": "boolean",
          "description": "Indicator if it is a demo stream"
        },
        {
          "name": "description",
          "type": "string",
          "description": "A description for this stream"
        },
        {
          "name": "includeChanges",
          "type": "boolean",
          "description": "Include or not raw changes for every transaction in webhook defaults to false"
        },
        {
          "name": "includeEvents",
          "type": "boolean",
          "description": "Include or not events in webhook defaults to false"
        },
        {
          "name": "includePayload",
          "type": "boolean",
          "description": "Include or not payload for every transaction in webhook defaults to false"
        },
        {
          "name": "network",
          "type": "array",
          "description": "The network to listen to",
          "field": { "type": "string", "enum": ["mainnet", "testnet"] }
        },
        {
          "name": "events",
          "type": "array",
          "description": "An Array of events in string-signature format ex: ['0x1::coin::WithdrawEvent']",
          "field": { "type": "string" }
        },
        {
          "name": "functions",
          "type": "array",
          "description": "An Array of events in string-signature format ex: ['0x1::aptos_account::transfer']",
          "field": { "type": "string" }
        },
        {
          "name": "tag",
          "type": "string",
          "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
        },
        {
          "name": "webhookUrl",
          "type": "string",
          "description": "Webhook URL where moralis will send the POST request."
        }
      ]
    },
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            { "name": "id", "type": "string" },
            { "name": "allAddresses", "type": "boolean" },
            { "name": "demo", "type": "boolean" },
            { "name": "description", "type": "string" },
            { "name": "includeChanges", "type": "boolean" },
            { "name": "includeEvents", "type": "boolean" },
            { "name": "includePayload", "type": "boolean" },
            { "name": "isErrorSince", "type": "string" },
            {
              "name": "network",
              "type": "array",
              "field": { "type": "string", "enum": ["mainnet", "testnet"] }
            },
            {
              "name": "status",
              "type": "string",
              "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
              "enum": ["active", "paused", "error", "terminated"]
            },
            { "name": "statusMessage", "type": "string" },
            {
              "name": "events",
              "type": "array",
              "field": { "type": "string" }
            },
            {
              "name": "functions",
              "type": "array",
              "field": { "type": "string" }
            },
            { "name": "tag", "type": "string" },
            { "name": "webhookUrl", "type": "string" },
            { "name": "amountOfAddresses", "type": "number" }
          ]
        }
      }
    ]
  },
  "aptosStreamsDelete": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Delete a stream",
    "description": "Deletes a aptos stream.",
    "method": "DELETE",
    "path": "/streams/aptos/:id",
    "pathParams": [
      {
        "name": "id",
        "description": "the id of the aptos stream to delete",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "responses": [{ "status": "200", "description": "Ok" }]
  },
  "aptosStreamsAddAddresses": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Add addresses to an aptos stream",
    "description": "Adds addresses to an existing aptos stream",
    "method": "POST",
    "path": "/streams/aptos/:id/address",
    "pathParams": [
      {
        "name": "id",
        "description": "the id of the aptos stream to get the addresses from",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": { "required": true, "type": "json" },
    "responses": [{ "status": "200", "description": "Ok" }]
  },
  "aptosStreamsDeleteAddresses": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Delete addresses of an aptos stream",
    "description": "Deletes addresses of an existing aptos stream",
    "method": "DELETE",
    "path": "/streams/aptos/:id/address",
    "pathParams": [
      {
        "name": "id",
        "description": "the id of the aptos stream to get the addresses from",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Provide a list of valid Aptos addresses, or a single address",
      "type": "json"
    },
    "responses": [{ "status": "200", "description": "Ok" }]
  },
  "aptosStreamsGetAddresses": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Get addresses by aptos stream id",
    "description": "Get all addresses associated with a specific aptos stream.",
    "method": "GET",
    "path": "/streams/aptos/:id/address",
    "pathParams": [
      {
        "name": "id",
        "description": "the id of the aptos stream to get the addresses from",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "limit",
        "description": "Limit response results max value 100",
        "required": true,
        "type": "number"
      },
      {
        "name": "cursor",
        "description": "Cursor for fetching next page",
        "required": false,
        "type": "string"
      }
    ],
    "responses": [{ "status": "200", "description": "Ok" }]
  },
  "aptosStreamsUpdateStatus": {
    "apiHost": "https://api.moralis-streams.com",
    "summary": "Update a Stream Status",
    "description": "Update a Stream Status",
    "method": "POST",
    "path": "/streams/aptos/:id/status",
    "pathParams": [
      {
        "name": "id",
        "description": "the id of the aptos stream to update the status",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Provide an object with the status to update can be 'active' or 'paused'",
      "type": "object",
      "fields": [
        {
          "name": "status",
          "type": "string",
          "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
          "enum": ["active", "paused", "error", "terminated"]
        }
      ]
    },
    "responses": [
      {
        "status": "200",
        "description": "Ok",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "status",
              "type": "string",
              "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
              "enum": ["active", "paused", "error", "terminated"]
            },
            { "name": "statusMessage", "type": "string" }
          ]
        }
      }
    ]
  }
}
