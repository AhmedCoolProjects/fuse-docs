{
  "getNativeBalance": {
    "apiHost": "https://deep-index.moralis.io/api/v2",
    "summary": "Get native balance by wallet",
    "description": "Get the native balance for a specific wallet address.",
    "method": "GET",
    "path": "/:address/balance",
    "pathParams": [
      {
        "name": "address",
        "description": "The address from which the native balance will be checked",
        "required": true,
        "example": "0x057Ec652A4F150f7FF94f089A38008f49a0DF88e",
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "chain",
        "description": "The chain to query",
        "required": false,
        "example": "eth",
        "type": "string",
        "enum": [
          "eth",
          "0x1",
          "goerli",
          "0x5",
          "sepolia",
          "0xaa36a7",
          "polygon",
          "0x89",
          "mumbai",
          "0x13881",
          "bsc",
          "0x38",
          "bsc testnet",
          "0x61",
          "avalanche",
          "0xa86a",
          "avalanche testnet",
          "0xa869",
          "fantom",
          "0xfa",
          "palm",
          "0x2a15c308d",
          "cronos",
          "0x19",
          "cronos testnet",
          "0x152",
          "arbitrum",
          "0xa4b1"
        ]
      },
      {
        "name": "to_block",
        "description": "The block number from which the balances should be checked",
        "required": false,
        "type": "number"
      }
    ],
    "responses": [
      {
        "status": "200",
        "description": "Returns the native balance for a specific address",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "balance",
              "type": "string",
              "description": "The balance",
              "example": "1234567890"
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis  from 'moralis';\nimport { EvmChain } from '@moralisweb3/evm-utils';\n\ntry {\n    const address = '0x1234567890123456789012345678901234567890';\n\n    const chain = EvmChain.ETHEREUM;\n\n    await Moralis.start({\n        apiKey: 'YOUR_API_KEY',\n        // ...and any other configuration\n    });\n\n    const response = await Moralis.EvmApi.balance.getNativeBalance({\n        address,\n        chain,\n    });\n\n    console.log(response?.result);\n} catch (e) {\n    console.error(e);\n}\n",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "csharp",
        "code": "private async Task<bool> GetNativeBalance(IWeb3Api web3Api, string address)\n{\n    bool result = true;\n    try\n    {\n        NativeBalance balance = await web3Api.Account.GetNativeBalance(address.ToLower(), ChainList.eth);\n        result = balance is { };\n    }\n    catch (Exception exp)\n    {\n        result = false;\n    }\n    return result;\n}\n",
        "name": "Moralis C# SDK"
      },
      {
        "language": "python",
        "code": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\", \n    \"chain\": \"eth\", \n    \"to_block\": 1.2, \n}\n\nresult = evm_api.balance.get_native_balance(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
      }
    ]
  },
  "getNativeBalancesForAddresses": {
    "apiHost": "https://deep-index.moralis.io/api/v2",
    "summary": "Get balance for a set of wallet",
    "description": "Get the native balances for a set of specific addresses",
    "method": "GET",
    "path": "/wallets/balances",
    "pathParams": [],
    "queryParams": [
      {
        "name": "chain",
        "description": "The chain to query",
        "required": false,
        "example": "eth",
        "type": "string",
        "enum": [
          "eth",
          "0x1",
          "goerli",
          "0x5",
          "sepolia",
          "0xaa36a7",
          "polygon",
          "0x89",
          "mumbai",
          "0x13881",
          "bsc",
          "0x38",
          "bsc testnet",
          "0x61",
          "avalanche",
          "0xa86a",
          "avalanche testnet",
          "0xa869",
          "fantom",
          "0xfa",
          "palm",
          "0x2a15c308d",
          "cronos",
          "0x19",
          "cronos testnet",
          "0x152",
          "arbitrum",
          "0xa4b1"
        ]
      },
      {
        "name": "to_block",
        "description": "The block number on which the balances should be checked",
        "required": false,
        "type": "number"
      },
      {
        "name": "wallet_addresses",
        "description": "The addresses to get metadata for",
        "required": true,
        "type": "array",
        "field": {
          "type": "string",
          "example": "0xE92d1A43df510F82C66382592a047d288f85226f"
        }
      }
    ],
    "responses": [
      {
        "status": "200",
        "description": "Returns a collection of balances",
        "body": {
          "type": "array",
          "field": {
            "type": "object",
            "fields": [
              {
                "name": "chain",
                "type": "string",
                "required": true,
                "description": "The chain",
                "example": "eth_mainnet"
              },
              {
                "name": "chain_id",
                "type": "string",
                "required": true,
                "description": "The chain id",
                "example": "2"
              },
              {
                "name": "total_balance",
                "type": "string",
                "required": true,
                "description": "The total balances for all the walttes",
                "example": "57499206466583095"
              },
              {
                "name": "block_number",
                "type": "string",
                "required": true,
                "description": "The block Number",
                "example": "123456789"
              },
              {
                "name": "block_timestamp",
                "type": "string",
                "required": true,
                "description": "The block timestamp",
                "example": "0.057"
              },
              {
                "name": "total_balance_formatted",
                "type": "string",
                "required": true,
                "description": "The total balances for all the walttes formatted",
                "example": "123456789"
              },
              {
                "name": "wallet_balances",
                "type": "array",
                "required": true,
                "field": {
                  "type": "object",
                  "fields": [
                    {
                      "name": "address",
                      "type": "string",
                      "description": "address",
                      "example": "0x123",
                      "required": true
                    },
                    {
                      "name": "balance",
                      "type": "string",
                      "description": "balance",
                      "example": "28499206466583095",
                      "required": true
                    },
                    {
                      "name": "balance_formatted",
                      "type": "string",
                      "description": "balance formatted",
                      "example": "0.0285",
                      "required": true
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    ],
    "codeSamples": [
      {
        "language": "python",
        "code": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"chain\": \"eth\", \n    \"providerUrl\": \"\", \n    \"to_block\": 1.2, \n}\nbody = {\n    \"addresses\": [], \n}\n\nresult = evm_api.balance.get_native_balances_for_addresses(\n    api_key=api_key,\n    params=params,\n    body=body,\n)\n\nprint(result)\n"
      }
    ]
  }
}
