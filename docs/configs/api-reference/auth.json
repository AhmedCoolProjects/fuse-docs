{
  "requestChallengeEvm": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Request EVM challenge",
    "method": "POST",
    "path": "/challenge/request/evm",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Request EVM challenge message.",
      "type": "object",
      "fields": [
        {
          "name": "domain",
          "type": "string",
          "required": true,
          "description": "RFC 4501 dns authority that is requesting the signing.",
          "example": "defi.finance"
        },
        {
          "name": "chainId",
          "type": "string",
          "required": true,
          "description": "EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
          "example": 1
        },
        {
          "name": "address",
          "type": "string",
          "required": true,
          "description": "Ethereum address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.",
          "example": "0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B"
        },
        {
          "name": "statement",
          "type": "string",
          "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
          "example": "Please confirm"
        },
        {
          "name": "uri",
          "type": "string",
          "required": true,
          "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
          "example": "https://defi.finance/"
        },
        {
          "name": "expirationTime",
          "type": "string",
          "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
          "example": "2020-01-01T00:00:00.000Z"
        },
        {
          "name": "notBefore",
          "type": "string",
          "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
          "example": "2020-01-01T00:00:00.000Z"
        },
        {
          "name": "resources",
          "type": "array",
          "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by new lines.",
          "example": ["https://docs.moralis.io/"],
          "field": { "type": "string" }
        },
        {
          "name": "timeout",
          "type": "number",
          "required": true,
          "description": "Time in seconds before the challenge is expired",
          "example": 15
        }
      ]
    },
    "responses": [
      {
        "status": "201",
        "description": "The back channel challenge containing the id to store on the api and the message to be signed by the user",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "id",
              "type": "string",
              "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
              "example": "fRyt67D3eRss3RrXa"
            },
            {
              "name": "message",
              "type": "string",
              "description": "Message that needs to be signed by the end user",
              "example": "defi.finance wants you to sign in with your Ethereum account:\n0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B\n\nPlease confirm\n\nURI: https://defi.finance/\nVersion: 1\nChain ID: 1\nNonce: DbU1DCTmdzR4lg3wi\nIssued At: 2022-06-12T12:15:31.290Z\nExpiration Time: 2020-01-01T00:00:00.000Z\nNot Before: 2020-01-01T00:00:00.000Z\nResources:\n- https://docs.moralis.io/"
            },
            {
              "name": "profileId",
              "type": "string",
              "description": "Unique identifier with a length of 66 characters",
              "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from 'moralis';\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  // Values set in the backend\n  const DOMAIN = 'defi.finance';\n  const STATEMENT = 'Please sign this message to confirm your identity.';\n  const URI = 'https://defi.finance';\n  const EXPIRATION_TIME = '2023-01-01T00:00:00.000Z';\n  const TIMEOUT = 15;\n\n  // Values provided by the user\n  const address = \"0xd8da6bf26964af9d7eed9e03e53415d37aa96045\";\n  const chain = \"0x1\";\n  const network = \"evm\";\n\n  const result = await Moralis.Auth.requestMessage({\n    address,\n    chain,\n    network,\n    domain: DOMAIN,\n    statement: STATEMENT,\n    uri: URI,\n    expirationTime: EXPIRATION_TIME,\n    timeout: TIMEOUT,\n  });\n} catch (e) {\n  console.error(e);\n}\n",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"domain\": \"defi.finance\", \n    \"chainId\": \"1\", \n    \"address\": \"0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B\", \n    \"statement\": \"Please confirm\", \n    \"uri\": \"https://defi.finance/\", \n    \"expirationTime\": \"2020-01-01T00:00:00.000Z\", \n    \"notBefore\": \"2020-01-01T00:00:00.000Z\", \n    \"resources\": ['https://docs.moralis.io/'], \n    \"timeout\": 15, \n}\n\nresult = auth.challenge.request_challenge_evm(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"
      }
    ]
  },
  "verifyChallengeEvm": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Verify EVM challenge",
    "method": "POST",
    "path": "/challenge/verify/evm",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Verify EVM challenge message.",
      "type": "object",
      "fields": [
        {
          "name": "message",
          "type": "string",
          "required": true,
          "description": "Message that needs to be signed by the end user.",
          "example": "defi.finance wants you to sign in with your Ethereum account:\n0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B\n\n\nURI: https://defi.finance\nVersion: 1\nChain ID: 1\nNonce: Px7Nh1RPzlCLwqgOb\nIssued At: 2022-11-30T10:20:00.262Z"
        },
        {
          "name": "signature",
          "type": "string",
          "required": true,
          "description": "EIP-191 compliant signature signed by the Ethereum account address requesting authentication.",
          "example": "0xa8f89a58bf9b433d3100f9e41ee35b5e31fb8c7cd62547acb113162ec6f2e4140207e2dfbd4e387e1801ebc7f08a9dd105ac1d22b2e2ff0df5fa8b6d9bdcfe491c"
        }
      ]
    },
    "responses": [
      {
        "status": "201",
        "description": "The token to be used to call the third party API from the client",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "id",
              "type": "string",
              "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
              "example": "fRyt67D3eRss3RrX"
            },
            {
              "name": "domain",
              "type": "string",
              "description": "RFC 4501 dns authority that is requesting the signing.",
              "example": "defi.finance"
            },
            {
              "name": "chainId",
              "type": "string",
              "description": "EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
              "example": 1
            },
            {
              "name": "address",
              "type": "string",
              "description": "Ethereum address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.",
              "example": "0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B"
            },
            {
              "name": "statement",
              "type": "string",
              "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
              "example": "Please confirm"
            },
            {
              "name": "uri",
              "type": "string",
              "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
              "example": "https://defi.finance/"
            },
            {
              "name": "expirationTime",
              "type": "string",
              "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
              "example": "2020-01-01T00:00:00.000Z"
            },
            {
              "name": "notBefore",
              "type": "string",
              "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
              "example": "2020-01-01T00:00:00.000Z"
            },
            {
              "name": "resources",
              "type": "array",
              "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by `\n- `.",
              "example": ["https://docs.moralis.io/"],
              "field": { "type": "string" }
            },
            {
              "name": "version",
              "type": "string",
              "description": "EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
              "example": "1.0"
            },
            {
              "name": "nonce",
              "type": "string",
              "example": "0x1234567890abcdef0123456789abcdef1234567890abcdef"
            },
            {
              "name": "profileId",
              "type": "string",
              "description": "Unique identifier with a length of 66 characters",
              "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from 'moralis';\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  // Values provided by the user\n  const message = \"\";\n  const signature = \"\";\n  const network = \"evm\";\n\n  const verifiedData = Moralis.Auth.verify({\n    message: message,\n    signature: signature,\n    network: network,\n  });\n} catch (e) {\n  console.error(e);\n}\n",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"message\": \"defi.finance wants you to sign in with your Ethereum account:<br/>0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B<br/><br/><br/>URI: https://defi.finance<br/>Version: 1<br/>Chain ID: 1<br/>Nonce: Px7Nh1RPzlCLwqgOb<br/>Issued At: 2022-11-30T10:20:00.262Z\", \n    \"signature\": \"0xa8f89a58bf9b433d3100f9e41ee35b5e31fb8c7cd62547acb113162ec6f2e4140207e2dfbd4e387e1801ebc7f08a9dd105ac1d22b2e2ff0df5fa8b6d9bdcfe491c\", \n}\n\nresult = auth.challenge.verify_challenge_evm(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"
      }
    ]
  },
  "requestChallengeSolana": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Request Solana challenge",
    "method": "POST",
    "path": "/challenge/request/solana",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Request Solana challenge message.",
      "type": "object",
      "fields": [
        {
          "name": "domain",
          "type": "string",
          "required": true,
          "description": "RFC 4501 dns authority that is requesting the signing.",
          "example": "defi.finance"
        },
        {
          "name": "network",
          "type": "string",
          "required": true,
          "description": "The network where Contract Accounts must be resolved.",
          "example": "mainnet"
        },
        {
          "name": "address",
          "type": "string",
          "required": true,
          "description": "Solana address with a length of 32 - 44 characters that is used to perform the signing",
          "example": "26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo"
        },
        {
          "name": "statement",
          "type": "string",
          "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
          "example": "Please confirm"
        },
        {
          "name": "uri",
          "type": "string",
          "required": true,
          "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
          "example": "https://defi.finance/"
        },
        {
          "name": "expirationTime",
          "type": "string",
          "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
          "example": "2020-01-01T00:00:00.000Z"
        },
        {
          "name": "notBefore",
          "type": "string",
          "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
          "example": "2020-01-01T00:00:00.000Z"
        },
        {
          "name": "resources",
          "type": "array",
          "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by new lines.",
          "example": ["https://docs.moralis.io/"],
          "field": { "type": "string" }
        },
        {
          "name": "timeout",
          "type": "number",
          "required": true,
          "description": "Time in seconds before the challenge is expired",
          "example": 15
        }
      ]
    },
    "responses": [
      {
        "status": "201",
        "description": "The back channel challenge containing the id to store on the api and the message to be signed by the user",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "id",
              "type": "string",
              "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
              "example": "fRyt67D3eRss3RrXa"
            },
            {
              "name": "message",
              "type": "string",
              "description": "Message that needs to be signed by the end user",
              "example": "defi.finance wants you to sign in with your Solana account:\n26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\n\nI am a third party API\n\nURI: http://defi.finance\nVersion: 1\nNetwork: mainnet\nNonce: PYxxb9msdjVXsMQ9x\nIssued At: 2022-08-25T11:02:34.097Z\nExpiration Time: 2022-08-25T11:12:38.243Z\nResources:\n- https://docs.moralis.io/"
            },
            {
              "name": "profileId",
              "type": "string",
              "description": "Unique identifier with a length of 66 characters",
              "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from 'moralis';\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  // Values set in the backend\n  const DOMAIN = 'defi.finance';\n  const STATEMENT = 'Please sign this message to confirm your identity.';\n  const URI = 'https://defi.finance';\n  const EXPIRATION_TIME = '2023-01-01T00:00:00.000Z';\n  const TIMEOUT = 15;\n\n  // Values provided by the user\n  const address = '26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo';\n  const solNetwork = 'mainnet';\n  const network = 'solana';\n\n  const result = await Moralis.Auth.requestMessage({\n    address,\n    solNetwork,\n    network,\n    domain: DOMAIN,\n    statement: STATEMENT,\n    uri: URI,\n    expirationTime: EXPIRATION_TIME,\n    timeout: TIMEOUT,\n  });\n} catch (e) {\n  console.error(e);\n}\n",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"domain\": \"defi.finance\", \n    \"network\": \"mainnet\", \n    \"address\": \"26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\", \n    \"statement\": \"Please confirm\", \n    \"uri\": \"https://defi.finance/\", \n    \"expirationTime\": \"2020-01-01T00:00:00.000Z\", \n    \"notBefore\": \"2020-01-01T00:00:00.000Z\", \n    \"resources\": ['https://docs.moralis.io/'], \n    \"timeout\": 15, \n}\n\nresult = auth.challenge.request_challenge_solana(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"
      }
    ]
  },
  "verifyChallengeSolana": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Verify Solana challenge",
    "method": "POST",
    "path": "/challenge/verify/solana",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Verify Solana challenge message.",
      "type": "object",
      "fields": [
        {
          "name": "message",
          "type": "string",
          "required": true,
          "description": "Message that needs to be signed by the end user",
          "example": "defi.finance wants you to sign in with your Solana account:\n26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\n\nI am a third party API\n\nURI: http://defi.finance\nVersion: 1\nNetwork: mainnet\nNonce: PYxxb9msdjVXsMQ9x\nIssued At: 2022-08-25T11:02:34.097Z\nExpiration Time: 2022-08-25T11:12:38.243Z\nResources:\n- https://docs.moralis.io/"
        },
        {
          "name": "signature",
          "type": "string",
          "required": true,
          "description": "Base58 signature that needs to be used to verify end user",
          "example": "2pH9DqD5rve2qV4yBDshcAjWd2y8TqMx8BPb7f3KoNnuLEhE5JwjruYi4jaFaD4HN6wriLz2Vdr32kRBAJmHcyny"
        }
      ]
    },
    "responses": [
      {
        "status": "201",
        "description": "The token to be used to call the third party API from the client",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "id",
              "type": "string",
              "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
              "example": "fRyt67D3eRss3RrX"
            },
            {
              "name": "domain",
              "type": "string",
              "description": "RFC 4501 dns authority that is requesting the signing.",
              "example": "defi.finance"
            },
            {
              "name": "network",
              "type": "string",
              "description": "The network where Contract Accounts must be resolved.",
              "example": "mainnet"
            },
            {
              "name": "address",
              "type": "string",
              "description": "Solana address with a length of 32 - 44 characters that is used to perform the signing",
              "example": "26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo"
            },
            {
              "name": "statement",
              "type": "string",
              "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
              "example": "Please confirm"
            },
            {
              "name": "uri",
              "type": "string",
              "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
              "example": "https://defi.finance/"
            },
            {
              "name": "expirationTime",
              "type": "string",
              "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
              "example": "2020-01-01T00:00:00.000Z"
            },
            {
              "name": "notBefore",
              "type": "string",
              "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
              "example": "2020-01-01T00:00:00.000Z"
            },
            {
              "name": "resources",
              "type": "array",
              "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by `\n- `.",
              "example": ["https://docs.moralis.io/"],
              "field": { "type": "string" }
            },
            {
              "name": "version",
              "type": "string",
              "description": "EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
              "example": "1.0"
            },
            {
              "name": "nonce",
              "type": "string",
              "example": "0x1234567890abcdef0123456789abcdef1234567890abcdef"
            },
            {
              "name": "profileId",
              "type": "string",
              "description": "Unique identifier with a length of 66 characters",
              "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
            }
          ]
        }
      }
    ],
    "codeSamples": [
      {
        "language": "node",
        "code": "import Moralis from 'moralis';\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  // Values provided by the user\n  const message = \"\";\n  const signature = \"\";\n  const network = \"solana\";\n\n  const verifiedData = Moralis.Auth.verify({\n    message: message,\n    signature: signature,\n    network: network,\n  });\n} catch (e) {\n  console.error(e);\n}\n",
        "name": "Moralis NodeJS SDK"
      },
      {
        "language": "python",
        "code": "from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"message\": \"defi.finance wants you to sign in with your Solana account:<br/>26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo<br/><br/>I am a third party API<br/><br/>URI: http://defi.finance<br/>Version: 1<br/>Network: mainnet<br/>Nonce: PYxxb9msdjVXsMQ9x<br/>Issued At: 2022-08-25T11:02:34.097Z<br/>Expiration Time: 2022-08-25T11:12:38.243Z<br/>Resources:<br/>- https://docs.moralis.io/\", \n    \"signature\": \"2pH9DqD5rve2qV4yBDshcAjWd2y8TqMx8BPb7f3KoNnuLEhE5JwjruYi4jaFaD4HN6wriLz2Vdr32kRBAJmHcyny\", \n}\n\nresult = auth.challenge.verify_challenge_solana(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"
      }
    ]
  },
  "requestChallengeAptos": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Request Aptos challenge",
    "method": "POST",
    "path": "/challenge/request/aptos",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Request Aptos challenge message.",
      "type": "object",
      "fields": [
        {
          "name": "domain",
          "type": "string",
          "required": true,
          "description": "RFC 4501 dns authority that is requesting the signing.",
          "example": "defi.finance"
        },
        {
          "name": "statement",
          "type": "string",
          "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
          "example": "Please confirm"
        },
        {
          "name": "uri",
          "type": "string",
          "required": true,
          "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
          "example": "https://defi.finance/"
        },
        {
          "name": "expirationTime",
          "type": "string",
          "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
          "example": "2020-01-01T00:00:00.000Z"
        },
        {
          "name": "notBefore",
          "type": "string",
          "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
          "example": "2020-01-01T00:00:00.000Z"
        },
        {
          "name": "resources",
          "type": "array",
          "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by new lines.",
          "example": ["https://docs.moralis.io/"],
          "field": { "type": "string" }
        },
        {
          "name": "timeout",
          "type": "number",
          "required": true,
          "description": "Time in seconds before the challenge is expired",
          "example": 15
        },
        {
          "name": "chainId",
          "type": "string",
          "required": true,
          "description": "Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
          "example": 1
        },
        {
          "name": "address",
          "type": "string",
          "required": true,
          "description": "Aptos address performing the signing conformant.",
          "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
        },
        {
          "name": "publicKey",
          "type": "string",
          "required": true,
          "description": "Aptos public key performing the signing conformant.",
          "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
        }
      ]
    },
    "responses": [
      {
        "status": "201",
        "description": "The back channel challenge containing the id to store on the api and the message to be signed by the user",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "id",
              "type": "string",
              "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
              "example": "fRyt67D3eRss3RrXa"
            },
            {
              "name": "profileId",
              "type": "string",
              "description": "Unique identifier with a length of 66 characters",
              "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
            },
            {
              "name": "message",
              "type": "string",
              "description": "Message that needs to be signed by the end user",
              "example": "defi.finance wants you to sign in with your Aptos account:\n0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d\n\nPlease confirm\n\nURI: https://defi.finance/\nVersion: 1\nChain ID: 1\nNonce: DbU1DCTmdzR4lg3wi\nIssued At: 2022-06-12T12:15:31.290Z\nExpiration Time: 2020-01-01T00:00:00.000Z\nNot Before: 2020-01-01T00:00:00.000Z\nResources:\n- https://docs.moralis.io/"
            }
          ]
        }
      }
    ]
  },
  "verifyChallengeAptos": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Verify Aptos challenge",
    "method": "POST",
    "path": "/challenge/verify/aptos",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Verify Aptos challenge message.",
      "type": "object",
      "fields": [
        {
          "name": "message",
          "type": "string",
          "required": true,
          "description": "Message that needs to be signed by the end user.",
          "example": "defi.finance wants you to sign in with your Aptos account:\n0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d\n\n\nURI: https://defi.finance\nVersion: 1\nChain ID: 1\nNonce: Px7Nh1RPzlCLwqgOb\nIssued At: 2022-11-30T10:20:00.262Z"
        },
        {
          "name": "signature",
          "type": "string",
          "required": true,
          "description": "EIP-191 compliant signature signed by the Aptos account address requesting authentication.",
          "example": "0xa8f89a58bf9b433d3100f9e41ee35b5e31fb8c7cd62547acb113162ec6f2e4140207e2dfbd4e387e1801ebc7f08a9dd105ac1d22b2e2ff0df5fa8b6d9bdcfe491c"
        }
      ]
    },
    "responses": [
      {
        "status": "201",
        "description": "The token to be used to call the third party API from the client",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "id",
              "type": "string",
              "description": "17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.",
              "example": "fRyt67D3eRss3RrX"
            },
            {
              "name": "domain",
              "type": "string",
              "description": "RFC 4501 dns authority that is requesting the signing.",
              "example": "defi.finance"
            },
            {
              "name": "statement",
              "type": "string",
              "description": "Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.",
              "example": "Please confirm"
            },
            {
              "name": "uri",
              "type": "string",
              "description": "RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).",
              "example": "https://defi.finance/"
            },
            {
              "name": "expirationTime",
              "type": "string",
              "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.",
              "example": "2020-01-01T00:00:00.000Z"
            },
            {
              "name": "notBefore",
              "type": "string",
              "description": "ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.",
              "example": "2020-01-01T00:00:00.000Z"
            },
            {
              "name": "resources",
              "type": "array",
              "description": "List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by `\n- `.",
              "example": ["https://docs.moralis.io/"],
              "field": { "type": "string" }
            },
            {
              "name": "version",
              "type": "string",
              "description": "EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
              "example": "1.0"
            },
            {
              "name": "nonce",
              "type": "string",
              "example": "0x1234567890abcdef0123456789abcdef1234567890abcdef"
            },
            {
              "name": "profileId",
              "type": "string",
              "description": "Unique identifier with a length of 66 characters",
              "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
            },
            {
              "name": "chainId",
              "type": "string",
              "description": "Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.",
              "example": 1
            },
            {
              "name": "address",
              "type": "string",
              "description": "Aptos address performing the signing conformant.",
              "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
            },
            {
              "name": "publicKey",
              "type": "string",
              "description": "Aptos public key performing the signing conformant.",
              "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
            }
          ]
        }
      }
    ]
  },
  "getAddresses": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Get addresses that are bound to the specific profileId",
    "method": "GET",
    "path": "/profile/:profileId/addresses",
    "pathParams": [
      {
        "name": "profileId",
        "description": "Unique identifier with a length of 66 characters",
        "required": true,
        "type": "string"
      }
    ],
    "queryParams": [],
    "responses": [
      {
        "status": "201",
        "description": "The addresses that are bound to the speicifc profileId"
      }
    ]
  },
  "requestBind": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Request bind between profile of two addresses",
    "description": "Request for message to bind profile that is belong to the two addresses<br>\n        All profiles under the addresses will be bound and new profile will be generated.",
    "method": "POST",
    "path": "/bind/request",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "The two addresses that are required to be bind.",
      "type": "object",
      "fields": [
        {
          "name": "addresses",
          "type": "object",
          "description": "An array of addresses that needs to be bind",
          "fields": [
            {
              "name": "blockchainType",
              "type": "string",
              "description": "The chain in which the address belongs to",
              "example": "evm"
            },
            {
              "name": "address",
              "type": "string",
              "description": "Address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.",
              "example": "0x57af6B90c2237d2F888bf4CAe56f25FE1b14e531"
            },
            {
              "name": "publicKey",
              "type": "string",
              "description": "Public key performing the signing conformant. (This is only needed for Aptos address)",
              "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
            }
          ]
        }
      ]
    },
    "responses": [
      {
        "status": "201",
        "description": "The messages that is required to be signed by each of the address",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "messages",
              "type": "array",
              "description": "Message that needs to be signed by the end user",
              "example": [
                "Please sign this message to bind:\nProfile Ids:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\n\nwith\n\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nNonce: 5pXWu7aGkY2J7II0X",
                "Please sign this message to bind:\nProfile Ids:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\n\nwith\n\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nNonce: 5pXWu7aGkY2J7II0X"
              ],
              "field": { "type": "string" }
            }
          ]
        }
      }
    ]
  },
  "verifyRequestBind": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Verify bind request",
    "method": "POST",
    "path": "/bind/request/verify",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Messages and its signatures that is used for verification",
      "type": "object",
      "fields": [
        {
          "name": "verifications",
          "type": "object",
          "description": "Message that needs to be signed by the end user",
          "fields": [
            {
              "name": "message",
              "type": "string",
              "description": "Message that needs to be signed by the end user",
              "example": "Please sign this message to bind:\nProfile Ids:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\n\nwith\n\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nNonce: 5pXWu7aGkY2J7II0X"
            },
            {
              "name": "signature",
              "type": "string",
              "description": "EIP-191 compliant signature signed by the Ethereum account address requesting authentication.",
              "example": "0xc4f2f59d80e036ecab4eaaac5d4ee713ab94264ca584839c98b5743c4f6777322038225a4bc1e0f13b8382166816737369f26bd66f0479cfa80d4c52c02eb2cb1b"
            }
          ]
        }
      ]
    },
    "responses": [
      {
        "status": "201",
        "description": "The profileId that all the addresses have been bind into.",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "profileId",
              "type": "string",
              "description": "Unique identifier with a length of 66 characters",
              "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
            }
          ]
        }
      }
    ]
  },
  "removeBind": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Request to remove bind of an address from a profile",
    "method": "POST",
    "path": "/bind/remove",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "The address that is required to be removed from the bind of the profileId.",
      "type": "object",
      "fields": [
        {
          "name": "blockchainType",
          "type": "string",
          "description": "The chain in which the address belongs to",
          "example": "evm"
        },
        {
          "name": "address",
          "type": "string",
          "description": "Address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.",
          "example": "0x57af6B90c2237d2F888bf4CAe56f25FE1b14e531"
        },
        {
          "name": "publicKey",
          "type": "string",
          "description": "Public key performing the signing conformant. (This is only needed for Aptos address)",
          "example": "0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"
        },
        {
          "name": "profileId",
          "type": "string",
          "description": "Unique identifier with a length of 66 characters",
          "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
        }
      ]
    },
    "responses": [
      {
        "status": "201",
        "description": "The messages that is required to be signed by each of the address",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "message",
              "type": "string",
              "description": "Message that needs to be signed by the end user",
              "example": "Please sign this message to unbind:\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nfrom\nProfile Id:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\nNonce: 5pXWu7aGkY2J7II0X"
            }
          ]
        }
      }
    ]
  },
  "verifyRemoveBind": {
    "apiHost": "https://authapi.moralis.io",
    "summary": "Verify remove bind request",
    "method": "POST",
    "path": "/bind/remove/verify",
    "pathParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "description": "Messages and its signatures that is used for verification",
      "type": "object",
      "fields": [
        {
          "name": "message",
          "type": "string",
          "description": "Message that needs to be signed by the end user",
          "example": "Please sign this message to unbind:\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nfrom\nProfile Id:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\nNonce: 5pXWu7aGkY2J7II0X"
        },
        {
          "name": "signature",
          "type": "string",
          "description": "EIP-191 compliant signature signed by the Ethereum account address requesting authentication.",
          "example": "0xc4f2f59d80e036ecab4eaaac5d4ee713ab94264ca584839c98b5743c4f6777322038225a4bc1e0f13b8382166816737369f26bd66f0479cfa80d4c52c02eb2cb1b"
        }
      ]
    },
    "responses": [
      {
        "status": "201",
        "description": "The new profileId that is being generated for this address.",
        "body": {
          "type": "object",
          "fields": [
            {
              "name": "profileId",
              "type": "string",
              "description": "Unique identifier with a length of 66 characters",
              "example": "0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"
            }
          ]
        }
      }
    ]
  }
}
